@using AirlineTicketingSystemWebApp.Models;
@model AddFlightViewModel;

<h2>Add Flight Page</h2>

@if (!String.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.ErrorMessage
    </div>
}

<form asp-action="AddFlight" asp-controller="Flight" method="post">
    @Html.AntiForgeryToken()
    <div class="form-group">
        <label for="Code">Flight Code</label>
        <input type="text" class="form-control" id="Code" name="Code" value="@Model?.Code" required />
        <span asp-validation-for="Code" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="DepartureDate">Departure Date</label>
        <input type="datetime-local" class="form-control" id="DepartureDate" name="DepartureDate" value="@Model?.DepartureDate" required />
        <span asp-validation-for="DepartureDate" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="DepartureAirportCode">Departure Airport Code</label>
        <select id="DepartureAirportCode" name="DepartureAirportCode" class="form-control" required onchange="departureChange(this.value)">
            <option value="">Select a departure airport code</option>
        </select>
        <span asp-validation-for="DepartureAirportCode" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="ArrivalAirportCode">Arrival Airport Code</label>
        <select id="ArrivalAirportCode" name="ArrivalAirportCode" class="form-control" required>
            <option value="">Select a arrival airport code</option>
        </select>
        <span asp-validation-for="ArrivalAirportCode" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="PlaneCode">Plane Code</label>
        <select id="PlaneCode" name="PlaneCode" class="form-control" required>
            <option value="">Select a plane code</option>
        </select>
        <span asp-validation-for="PlaneCode" class="text-danger"></span>
    </div>
    <button type="submit" value="Add Flight" class="btn btn-success">Add Flight</button>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Fetch airports when the page loads
        fetchAirports();

        // TODO - disable arrival airports and planes
    });
   
    async function fetchAirports() {
        try {
            const response = await fetch("http://airlineticketingsystemapi.azurewebsites.net/api/v1/Airport/GET");
            if (!response.ok) {
                throw new Error("Failed to fetch airports");
            }
            const airports = await response.json();
            populateDeparture(airports);
        } catch (error) {
            console.error("Error fetching airports:", error);
        }
    }

    // Enable planes and arrival airports if code is not empty
    async function departureChange(departureAirportCode) {
        const urlPlanes = `http://airlineticketingsystemapi.azurewebsites.net/api/v1/Airport/GET/${departureAirportCode}/Planes`;
        const urlAirports = `http://airlineticketingsystemapi.azurewebsites.net/api/v1/Airport/GET/${departureAirportCode}/AvAirports`;
        try {
            const responsePlane = await fetch(urlPlanes);
            if (!responsePlane.ok) {
                throw new Error("Failed to fetch planes");
            }
            const planes = await responsePlane.json();
            populatePlanes(planes);

            const responseAirports = await fetch(urlAirports);
            if (!responseAirports.ok) {
                throw new Error("Failed to fetch planes");
            }
            const airports = await responseAirports.json();
            populateArrival(airports);
        } catch (error) {
            console.error("Error fetching planes:", error);
        }
    }

    function populateDeparture(airports) {
        const departureSelect = document.getElementById("DepartureAirportCode");
        airports.forEach(airport => {
            const option = document.createElement("option");
            option.value = airport.code;
            option.textContent = airport.code; 
            departureSelect.appendChild(option);
        });
    }

    function populateArrival(airports) {
        const arrivalSelect = document.getElementById("ArrivalAirportCode");
        arrivalSelect.innerHTML = '<option value="">Select a arrival airport code</option>';
        airports.forEach(airport => {
            const option = document.createElement("option");
            option.value = airport.code; 
            option.textContent = airport.code; 
            arrivalSelect.appendChild(option);
        });
    }

    function populatePlanes(planes) {
        const planeSelect = document.getElementById("PlaneCode");
        // Clear existing options
        planeSelect.innerHTML = '<option value="">Select a plane code</option>';
        planes.forEach(plane => {
            const option = document.createElement("option");
            option.value = plane.code;
            option.textContent = plane.code;
            planeSelect.appendChild(option);
        });
    }
    
</script>
